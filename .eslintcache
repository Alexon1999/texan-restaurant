[{"C:\\Users\\alexo\\Desktop\\texan\\src\\index.js":"1","C:\\Users\\alexo\\Desktop\\texan\\src\\App.js":"2","C:\\Users\\alexo\\Desktop\\texan\\src\\utilities\\index.js":"3","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\Navbar.js":"4","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\NavMobile.js":"5","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\Navigation.js":"6","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\MenuToggle.js":"7","C:\\Users\\alexo\\Desktop\\texan\\src\\hooks\\useDimensions.js":"8","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\MenuItem.js":"9","C:\\Users\\alexo\\Desktop\\texan\\src\\contexts\\Navbar\\actiontypes.js":"10","C:\\Users\\alexo\\Desktop\\texan\\src\\contexts\\Navbar\\NavBarState.js":"11","C:\\Users\\alexo\\Desktop\\texan\\src\\contexts\\Navbar\\reducer.js":"12","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\contact\\index.js":"13","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\contact\\Details.js":"14","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\form\\index.js":"15","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\card\\Card.js":"16","C:\\Users\\alexo\\Desktop\\texan\\src\\hooks\\useForm.js":"17","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\modal\\Modal.js":"18","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Home.js":"19","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\hero\\Hero.js":"20","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Commander.js":"21","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\NotFoundPage.js":"22","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Panier.js":"23","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Contact.js":"24","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\Menu\\card.js":"25","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\Menu\\index.js":"26","C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-store\\store.js":"27","C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-reducers\\RootReducer.js":"28","C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-slices\\basketsSlice.js":"29","C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-slices\\alertsSlice.js":"30","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\alert\\Alerts.js":"31","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\alert\\Alert.js":"32","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\product\\Product.js":"33","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Paiement.js":"34","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\MyModal\\Modal.js":"35","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Felicitation.js":"36"},{"size":302,"mtime":1612797193620,"results":"37","hashOfConfig":"38"},{"size":1789,"mtime":1612972160161,"results":"39","hashOfConfig":"38"},{"size":2034,"mtime":1612895936782,"results":"40","hashOfConfig":"38"},{"size":6566,"mtime":1612813096864,"results":"41","hashOfConfig":"38"},{"size":1945,"mtime":1611686005883,"results":"42","hashOfConfig":"38"},{"size":1199,"mtime":1612813203090,"results":"43","hashOfConfig":"38"},{"size":1037,"mtime":1599056446325,"results":"44","hashOfConfig":"38"},{"size":731,"mtime":1610649433748,"results":"45","hashOfConfig":"38"},{"size":1126,"mtime":1611685278098,"results":"46","hashOfConfig":"38"},{"size":90,"mtime":1611684955503,"results":"47","hashOfConfig":"38"},{"size":934,"mtime":1612812831292,"results":"48","hashOfConfig":"38"},{"size":522,"mtime":1611679649710,"results":"49","hashOfConfig":"38"},{"size":813,"mtime":1611684949936,"results":"50","hashOfConfig":"38"},{"size":1733,"mtime":1612813478224,"results":"51","hashOfConfig":"38"},{"size":6139,"mtime":1612813790562,"results":"52","hashOfConfig":"38"},{"size":1631,"mtime":1612813881937,"results":"53","hashOfConfig":"38"},{"size":635,"mtime":1610380634798,"results":"54","hashOfConfig":"38"},{"size":646,"mtime":1612972049661,"results":"55","hashOfConfig":"38"},{"size":164,"mtime":1612356074108,"results":"56","hashOfConfig":"38"},{"size":2157,"mtime":1612550826428,"results":"57","hashOfConfig":"38"},{"size":2388,"mtime":1612810448759,"results":"58","hashOfConfig":"38"},{"size":1113,"mtime":1612461987933,"results":"59","hashOfConfig":"38"},{"size":1552,"mtime":1612968704772,"results":"60","hashOfConfig":"38"},{"size":200,"mtime":1612356110825,"results":"61","hashOfConfig":"38"},{"size":4457,"mtime":1612980494934,"results":"62","hashOfConfig":"38"},{"size":775,"mtime":1612462023440,"results":"63","hashOfConfig":"38"},{"size":177,"mtime":1612460804759,"results":"64","hashOfConfig":"38"},{"size":268,"mtime":1612531837064,"results":"65","hashOfConfig":"38"},{"size":1883,"mtime":1612899036576,"results":"66","hashOfConfig":"38"},{"size":912,"mtime":1612533758061,"results":"67","hashOfConfig":"38"},{"size":556,"mtime":1612540966704,"results":"68","hashOfConfig":"38"},{"size":1522,"mtime":1612796250724,"results":"69","hashOfConfig":"38"},{"size":1140,"mtime":1612812126790,"results":"70","hashOfConfig":"38"},{"size":14860,"mtime":1612972846015,"results":"71","hashOfConfig":"38"},{"size":2555,"mtime":1612968226397,"results":"72","hashOfConfig":"38"},{"size":1927,"mtime":1612979662342,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1ya07co",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"C:\\Users\\alexo\\Desktop\\texan\\src\\index.js",[],["155","156"],"C:\\Users\\alexo\\Desktop\\texan\\src\\App.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\utilities\\index.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\Navbar.js",["157","158","159"],"import React, { useRef, useEffect, useMemo, useState } from \"react\";\r\nimport Logo from \"../../images/logo.png\";\r\nimport \"./navbar.css\";\r\n\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport NavMobile from \"./mobile/NavMobile\";\r\n\r\nimport {\r\n  debounce,\r\n  getNombresArticles,\r\n  isIntersecting,\r\n  smoothScroll,\r\n} from \"../../utilities\";\r\nimport { useNavBarStateValue } from \"../../contexts/Navbar/NavBarState\";\r\nimport { SET_ACTIVE } from \"../../contexts/Navbar/actiontypes\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectBaskets } from \"../../app/Redux-slices/basketsSlice\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport { OverlayTrigger, Popover } from \"react-bootstrap\";\r\n\r\nconst NavBar = () => {\r\n  const nav = useRef(null);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const currentPage = useMemo(() => location.pathname, [location.pathname]);\r\n  // const [activeButton, setActiveButton] = useState(\"home\");\r\n  const { state, dispatch } = useNavBarStateValue();\r\n  const [showBgNavBar, setShowBgNavBar] = useState(false);\r\n  const baskets = useSelector(selectBaskets);\r\n\r\n  const changeBackground = () => {\r\n    // console.log(window.scrollY);\r\n    if (window.scrollY >= 80) {\r\n      setShowBgNavBar(true);\r\n    } else {\r\n      setShowBgNavBar(false);\r\n    }\r\n  };\r\n\r\n  window.addEventListener(\"scroll\", changeBackground);\r\n\r\n  const IsActiveButton = (id) => (e) => {\r\n    // setActiveButton(id);\r\n    dispatch({\r\n      id,\r\n      type: SET_ACTIVE,\r\n    });\r\n    smoothScroll(id)(e);\r\n  };\r\n\r\n  const pushToHome = (id) => (e) => {\r\n    history.push(\"/\");\r\n    IsActiveButton(id)(e);\r\n    // smoothScroll(id)(e);\r\n  };\r\n\r\n  return (\r\n    <nav\r\n      onMouseEnter={() => setShowBgNavBar(true)}\r\n      onMouseLeave={() => setShowBgNavBar(false)}\r\n      className={`navbar ${showBgNavBar ? \"active\" : \"\"} ${\r\n        location.pathname !== \"/\" ? \"sticky\" : \"\"\r\n      }`}\r\n      ref={nav}\r\n      id='navbar'>\r\n      <div className='navbar__container'>\r\n        <div className='navbar__logo-container'>\r\n          {location.pathname === \"/\" ? (\r\n            <a href='#home' onClick={IsActiveButton(\"home\")}>\r\n              <img className='navbar__logo' src={Logo} alt='Markus' />\r\n            </a>\r\n          ) : (\r\n            <Link to='/' onClick={pushToHome(\"home\")}>\r\n              <img className='navbar__logo' src={Logo} alt='Markus' />\r\n            </Link>\r\n          )}\r\n        </div>\r\n        <div className='navbar__links'>\r\n          {state.map((link) => {\r\n            if (link.isBasket) {\r\n              return (\r\n                <div\r\n                  key={link.path}\r\n                  className={`${\r\n                    location.pathname === link.path ? \"active \" : \"\"\r\n                  }navbar__links-basket`}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                  }}>\r\n                  <Link\r\n                    to={link.path}\r\n                    className={`${\r\n                      location.pathname === link.path ? \"active \" : \"\"\r\n                    }basket`}>\r\n                    <i className='fas fa-shopping-basket'></i> Panier\r\n                    <span>{getNombresArticles(baskets)}</span>\r\n                  </Link>\r\n                  <OverlayTrigger\r\n                    trigger={baskets.length ? [\"click\"] : [\"hover\", \"focus\"]}\r\n                    placement='bottom'\r\n                    rootClose={true} // when we click outside , we can close the overlay\r\n                    overlay={\r\n                      <Popover>\r\n                        <Popover.Title as='h3' className='text-center'>\r\n                          Votre panier {!baskets.length && \"est vide\"}\r\n                        </Popover.Title>\r\n                        {/* quand le panier est remplie*/}\r\n                        {!!baskets.length && (\r\n                          <Popover.Content>\r\n                            {baskets.map((item) => (\r\n                              <div\r\n                                style={{\r\n                                  display: \"flex\",\r\n                                  alignItems: \"center\",\r\n                                  padding: \"10px 0\",\r\n                                }}>\r\n                                <img\r\n                                  src={item.img}\r\n                                  alt=''\r\n                                  style={{\r\n                                    maxWidth: \"50px\",\r\n                                    objectFit: \"contain\",\r\n                                  }}\r\n                                />\r\n                                <p\r\n                                  style={{\r\n                                    margin: \"0 5px 0\",\r\n                                  }}>\r\n                                  {item.title}\r\n                                </p>\r\n                              </div>\r\n                            ))}\r\n                          </Popover.Content>\r\n                        )}\r\n                      </Popover>\r\n                    }>\r\n                    <IconButton>\r\n                      <ArrowDropDownIcon />\r\n                    </IconButton>\r\n                  </OverlayTrigger>\r\n                </div>\r\n              );\r\n            }\r\n\r\n            // if (link.estDansHome) {\r\n            //   if (location.pathname === \"/\") {\r\n            //     return (\r\n            //       <a\r\n            //         href={\"#\" + link.id}\r\n            //         key={link.path}\r\n            //         className={link.active ? \"active\" : undefined}\r\n            //         onClick={pushToHome(link.id)}>\r\n            //         {link.nom}\r\n            //       </a>\r\n            //     );\r\n            //   }\r\n            //   return null;\r\n            // }\r\n\r\n            // return jsx\r\n            // console.log(location.pathname);\r\n            return (\r\n              <Link\r\n                to={link.path}\r\n                key={link.path}\r\n                className={\r\n                  location.pathname === link.path ? \"active\" : undefined\r\n                }>\r\n                {link.nom}\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <NavMobile\r\n          currentPage={currentPage}\r\n          IsActiveButton={IsActiveButton}\r\n          // activeButton={activeButton}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\NavMobile.js",["160"],"import React, { useRef, useEffect, useState } from \"react\";\r\n// import ReactDOM from 'react-dom';\r\n\r\nimport \"./navmobile.css\";\r\n\r\nimport { motion, useCycle } from \"framer-motion\";\r\nimport { useDimensions } from \"../../../hooks/useDimensions\";\r\nimport MenuToggle from \"./MenuToggle\";\r\nimport { Navigation } from \"./Navigation\";\r\n\r\nconst sidebar = {\r\n  open: (height = 1000) => ({\r\n    // +  clip path:       taille            ||  x  || y\r\n    clipPath: `circle(${height * 2 + 200}px at 40px 40px)`,\r\n    transition: {\r\n      type: \"spring\",\r\n      stiffness: 20,\r\n      restDelta: 2,\r\n    },\r\n  }),\r\n  closed: {\r\n    // + clip path: taille || x pos || y pos\r\n    clipPath: \"circle(50px at 300px -50px)\",\r\n    transition: {\r\n      delay: 0.5,\r\n      type: \"spring\",\r\n      stiffness: 400,\r\n      damping: 40,\r\n    },\r\n  },\r\n};\r\n\r\nconst NavMobile = ({ currentPage, IsActiveButton, activeButton }) => {\r\n  const [isOpen, setOpen] = useState(false);\r\n  const containerRef = useRef(null);\r\n  const { height } = useDimensions(containerRef);\r\n\r\n  const toggleOpen = () => setOpen((prev) => !prev);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      window.document.body.style.overflow = \"hidden\";\r\n    } else {\r\n      window.document.body.style.overflow = \"auto\";\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <motion.nav\r\n      className='nav-mobile'\r\n      initial={false}\r\n      animate={isOpen ? \"open\" : \"closed\"}\r\n      style={{\r\n        pointerEvents: isOpen ? \"all\" : \"none\",\r\n      }}\r\n      custom={height}\r\n      ref={containerRef}>\r\n      <motion.div className='background' variants={sidebar} />\r\n      <Navigation\r\n        toggleOpen={toggleOpen}\r\n        currentPage={currentPage}\r\n        IsActiveButton={IsActiveButton}\r\n        activeButton={activeButton}\r\n      />\r\n      <MenuToggle\r\n        isOpen={isOpen}\r\n        toggle={() => {\r\n          toggleOpen();\r\n        }}\r\n      />\r\n    </motion.nav>\r\n  );\r\n};\r\n\r\nexport default NavMobile;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\Navigation.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\MenuToggle.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\hooks\\useDimensions.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\navbar\\mobile\\MenuItem.js",["161"],"import * as React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst variants = {\r\n  open: {\r\n    y: 0,\r\n    opacity: 1,\r\n    transition: {\r\n      y: { stiffness: 1000, velocity: -100 },\r\n    },\r\n  },\r\n  closed: {\r\n    y: 50,\r\n    opacity: 0,\r\n    transition: {\r\n      y: { stiffness: 1000 },\r\n    },\r\n  },\r\n};\r\n\r\nexport const MenuItem = ({\r\n  nom,\r\n  path,\r\n  toggleOpen,\r\n  currentPage,\r\n  estDansHome,\r\n  active,\r\n  id,\r\n  IsActiveButton,\r\n}) => {\r\n  return (\r\n    <motion.li\r\n      variants={variants}\r\n      whileHover={{ scale: 1.1 }}\r\n      whileTap={{ scale: 0.95 }}>\r\n      {/* <Link\r\n        onClick={toggleOpen}\r\n        to={path}\r\n        className={currentPage === path ? \"active\" : undefined}>\r\n        {nom}\r\n      </Link> */}\r\n      <a\r\n        href={\"#\" + id}\r\n        key={nom}\r\n        // className={id === activeButton ? \"active\" : undefined}\r\n        className={active ? \"active\" : undefined}\r\n        onClick={(e) => {\r\n          toggleOpen();\r\n          IsActiveButton(id)(e);\r\n        }}>\r\n        {nom}\r\n      </a>\r\n    </motion.li>\r\n  );\r\n};\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\contexts\\Navbar\\actiontypes.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\contexts\\Navbar\\NavBarState.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\contexts\\Navbar\\reducer.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\contact\\index.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\contact\\Details.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\form\\index.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\card\\Card.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\hooks\\useForm.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\modal\\Modal.js",["162"],"import { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst ModalBootsrap = ({ children, show, handleClose, title, img }) => {\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            <div>\r\n              <h2>{title}</h2>\r\n              <img\r\n                src={img}\r\n                alt=''\r\n                style={{ maxWidth: \"80%\", objectFit: \"contain\" }}\r\n              />\r\n            </div>\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{children}</Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalBootsrap;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Home.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\hero\\Hero.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Commander.js",["163"],"import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport Menu from \"../components/Menu\";\r\nimport Card from \"../components/Menu/card\";\r\n\r\nimport \"./commander.css\";\r\n\r\nimport frenchies from \"../images/menu-burger.png\";\r\nimport CosaNostra from \"../images/cosa-nostra.png\";\r\nimport TexasRanger from \"../images/texas-ranger.png\";\r\nimport Frites from \"../images/frites.png\";\r\nimport Wings from \"../images/wings.png\";\r\n\r\nconst Commander = () => {\r\n  const [active, setActive] = useState(\"Burgers\");\r\n\r\n  return (\r\n    <div className='commander'>\r\n      <div className='commander__container'>\r\n        <Menu active={active} setActive={setActive} />\r\n        <div></div>\r\n        <div className='commander__container__cards'>\r\n          {datas\r\n            .filter((data) => data.categ === active.toLowerCase())\r\n            .map((data) => {\r\n              return <Card key={data.id} {...data} />;\r\n            })}\r\n          {/* <Card />\r\n          <Card />\r\n          <Card />\r\n          <Card />\r\n          <Card />\r\n          <Card />\r\n          <Card /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst datas = [\r\n  {\r\n    id: 1,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Cosa Nostra\",\r\n    prix: 11.99,\r\n    img: CosaNostra,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Texas Ranger\",\r\n    prix: 15.99,\r\n    img: TexasRanger,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 9,\r\n    title: \"Frenchies\",\r\n    prix: 11.99,\r\n    img: frenchies,\r\n    categ: \"burgers\",\r\n  },\r\n  {\r\n    id: 10,\r\n    title: \"Frites\",\r\n    prix: 3.99,\r\n    img: Frites,\r\n    categ: \"sides\",\r\n  },\r\n  {\r\n    id: 11,\r\n    title: \"Hot Wings\",\r\n    prix: 7.99,\r\n    img: Wings,\r\n    categ: \"sides\",\r\n  },\r\n];\r\n\r\nexport default Commander;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\NotFoundPage.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Panier.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Contact.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\Menu\\card.js",["164"],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\Menu\\index.js",["165"],"import { useState } from \"react\";\r\nimport menu from \"../../images/menu.png\";\r\n\r\nimport \"./menu.css\";\r\n\r\nconst Menu = ({ setActive, active }) => {\r\n  const [menus, setMenus] = useState([\r\n    \"Entrées\",\r\n    \"Burgers\",\r\n    \"Poutines\",\r\n    \"Sides\",\r\n    \"Desserts\",\r\n    \"Boissons\",\r\n  ]);\r\n\r\n  return (\r\n    <div className='menu'>\r\n      <div className='menu__image-container'>\r\n        <img src={menu} alt='menu_img' />\r\n      </div>\r\n\r\n      <div className='menu__items'>\r\n        {menus.map((menu) => (\r\n          <p\r\n            key={menu}\r\n            className={`menu__item ${active === menu ? \"active\" : \"\"}`}\r\n            onClick={() => setActive(menu)}>\r\n            {menu}\r\n          </p>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-store\\store.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-reducers\\RootReducer.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-slices\\basketsSlice.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\app\\Redux-slices\\alertsSlice.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\alert\\Alerts.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\alert\\Alert.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\components\\product\\Product.js",[],"C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Paiement.js",["166"],"import { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Button,\r\n  FormControl,\r\n  IconButton,\r\n  Input,\r\n  InputLabel,\r\n  makeStyles,\r\n  // Modal,\r\n} from \"@material-ui/core\";\r\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\r\nimport useForm from \"../hooks/useForm\";\r\n\r\nimport \"./paiement.css\";\r\n\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectBaskets, emptyBasket } from \"../app/Redux-slices/basketsSlice\";\r\nimport spinner from \"../images/spinner.gif\";\r\nimport { calculPrixProduitAvecQuantite, calculTotal } from \"../utilities\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Modal from \"../components/MyModal/Modal\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  marginLeftRight: {\r\n    marginRight: theme.spacing(1),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  textField: {\r\n    width: \"25ch\",\r\n  },\r\n\r\n  buttonIcon: {\r\n    paddingLeft: 1,\r\n  },\r\n\r\n  border: {\r\n    \"& label.Mui-focused\": {\r\n      color: \"#ccc\",\r\n    },\r\n    \"& .MuiInput-underline:after\": {\r\n      borderBottomColor: \"#ccc\",\r\n    },\r\n\r\n    \"& .MuiOutlinedInput-root\": {\r\n      \"&:hover fieldset\": {\r\n        borderColor: \"#ccc\",\r\n      },\r\n      \"&.Mui-focused fieldset\": {\r\n        borderColor: \"#ccc\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst initial = {\r\n  nom: \"\",\r\n  prenom: \"\",\r\n  email: \"\",\r\n  num_tel: \"\",\r\n  adresse: \"\",\r\n  ville: \"\",\r\n  code_postale: \"\",\r\n};\r\n\r\nconst Paiement = () => {\r\n  const [paiment_process, setPaiement_process] = useState(\"livraison\");\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const [error, setError] = useState(null);\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const history = useHistory();\r\n\r\n  const dispatch = useDispatch();\r\n  const baskets = useSelector(selectBaskets);\r\n\r\n  const classes = useStyles();\r\n\r\n  const estValide = (fieldValues = state) => {\r\n    const validator = {};\r\n    if (\"nom\" in fieldValues)\r\n      validator.nom = state.nom ? null : \"le champ nom est obligatore\";\r\n    if (\"prenom\" in fieldValues)\r\n      validator.prenom = state.prenom ? null : \"le champ prenom est obligatore\";\r\n\r\n    if (\"email\" in fieldValues)\r\n      validator.email = /([a-zA-Z0-9-_.+]{4,})@.+\\..+/.test(email)\r\n        ? null\r\n        : \"Email n'est pas valide\";\r\n\r\n    if (\"num_tel\" in fieldValues)\r\n      validator.num_tel = /(?:(\\+(\\d{1,2})?)[ -]?)?\\(?(?<first>\\d{3})\\)?[-\\s]?(\\d{3})[- ]?(\\d{4})/.test(\r\n        num_tel\r\n      )\r\n        ? null\r\n        : \"Numéro de téléphone n'est pas valide\";\r\n\r\n    if (\"adresse\" in fieldValues)\r\n      validator.adresse = state.adresse\r\n        ? null\r\n        : \"le champ adresse est obligatore\";\r\n    if (\"ville\" in fieldValues)\r\n      validator.ville = state.ville ? null : \"le champ ville est obligatore\";\r\n\r\n    if (\"code_postale\" in fieldValues)\r\n      validator.code_postale = /\\d+/.test(code_postale)\r\n        ? null\r\n        : \"Code postale n'est pas valide\";\r\n\r\n    setErrors({ ...validator });\r\n\r\n    // retourne boolean si et seulement si on passe un parametre pour la fonction\r\n    if (fieldValues === state) {\r\n      return Object.values(validator).every((el) => !el);\r\n    }\r\n  };\r\n\r\n  const {\r\n    state,\r\n    handleInputChange,\r\n    errors,\r\n    setErrors,\r\n    reinitialiserState,\r\n  } = useForm(initial, estValide);\r\n\r\n  const { nom, prenom, email, num_tel, adresse, ville, code_postale } = state;\r\n\r\n  const prixTotal = calculTotal(baskets);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (estValide()) {\r\n      setPaiement_process(\"paiement\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    // Listen for changes in CardElement\r\n    // and display any errors as the customer types their card details\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  const Payer = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { data } = await axios.post(\r\n      \"https://texan-stripe.herokuapp.com/create-client-secret\",\r\n      {\r\n        amount: prixTotal * 100,\r\n        email,\r\n      }\r\n    );\r\n    // *100 : stripe prend l'unité en centimes\r\n    // 3€ -> 300 centimes\r\n\r\n    setProcessing(true);\r\n    setDisabled(true);\r\n\r\n    const billing_details = {\r\n      name: nom + \" \" + prenom,\r\n      address: {\r\n        city: ville,\r\n        country: \"fr\",\r\n        state: null,\r\n        line1: adresse,\r\n        line2: null,\r\n        postal_code: code_postale,\r\n      },\r\n      email,\r\n      phone: num_tel,\r\n    };\r\n\r\n    try {\r\n      const payload = await stripe.confirmCardPayment(data.clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n          billing_details,\r\n        },\r\n      });\r\n      if (payload.error) {\r\n        setError(`Paiement échoué ${payload.error.message}`);\r\n        setProcessing(false);\r\n      } else {\r\n        setError(null);\r\n        setProcessing(false);\r\n        setDisabled(false);\r\n        setSucceeded(true);\r\n        reinitialiserState();\r\n        dispatch(emptyBasket());\r\n        history.replace(\"/felicitation\", { payer: true });\r\n      }\r\n    } catch (err) {\r\n      // console.log(err.message);\r\n      // setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleClose = (e) => {\r\n    console.log(e.target.classList);\r\n\r\n    if (\r\n      e.target.classList.contains(\"myModal__backdrop\") ||\r\n      e.target.classList.contains(\"MuiIconButton-root\") ||\r\n      e.target.classList.contains(\"fa-times\") ||\r\n      e.target.classList.contains(\"MuiIconButton-label\") ||\r\n      e.target.classList.contains(\"MuiButton-label\")\r\n    ) {\r\n      setShowModal(false);\r\n    }\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setShowModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className='paiment'>\r\n      <div className='paiement__container'>\r\n        <h1>Caisse</h1>\r\n        <div className='paiement__process'>\r\n          <div\r\n            className={\r\n              \"paiement__process--option1 paiement__process--options active\"\r\n            }>\r\n            <span>1</span>\r\n            <p>Adresse de livraison</p>\r\n          </div>\r\n          <hr />\r\n          <div\r\n            className={\r\n              \"paiement__process--option2 paiement__process--options \" +\r\n              (paiment_process === \"paiement\" ? \"active\" : \"\")\r\n            }>\r\n            <span>2</span>\r\n            <p>Détails de paiement</p>\r\n          </div>\r\n        </div>\r\n\r\n        {paiment_process === \"livraison\" ? (\r\n          <form noValidate autoComplete='off' onSubmit={handleSubmit}>\r\n            <FormControl\r\n              fullWidth\r\n              className={`${classes.margin} ${classes.border} `}>\r\n              <InputLabel>Nom</InputLabel>\r\n              <Input\r\n                value={nom}\r\n                name='nom'\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <div className='error'>{errors.nom}</div>\r\n            <FormControl\r\n              fullWidth\r\n              className={`${classes.margin} ${classes.border} `}>\r\n              <InputLabel>Prenom</InputLabel>\r\n              <Input\r\n                value={prenom}\r\n                name='prenom'\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <div className='error'>{errors.prenom}</div>\r\n\r\n            <FormControl\r\n              fullWidth\r\n              className={`${classes.margin} ${classes.border} `}>\r\n              <InputLabel>Adresse Mail</InputLabel>\r\n              <Input\r\n                type='email'\r\n                name='email'\r\n                onChange={handleInputChange}\r\n                value={email}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <div className='error'>{errors.email}</div>\r\n\r\n            <FormControl\r\n              fullWidth\r\n              className={`${classes.margin} ${classes.border} `}>\r\n              <InputLabel>Numéro de Téléphone</InputLabel>\r\n              <Input\r\n                value={num_tel}\r\n                name='num_tel'\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <div className='error'>{errors.num_tel}</div>\r\n\r\n            <FormControl\r\n              fullWidth\r\n              className={`${classes.margin} ${classes.border} `}>\r\n              <InputLabel>Adresse</InputLabel>\r\n              <Input\r\n                value={adresse}\r\n                name='adresse'\r\n                onChange={handleInputChange}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <div className='error'>{errors.adresse}</div>\r\n\r\n            <div style={{ display: \"flex\" }}>\r\n              <FormControl\r\n                fullWidth\r\n                className={`${classes.margin} ${classes.border} ${classes.marginLeftRight}`}>\r\n                <InputLabel>Ville</InputLabel>\r\n                <Input\r\n                  value={ville}\r\n                  name='ville'\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n                <div className='error'>{errors.ville}</div>\r\n              </FormControl>\r\n              <FormControl\r\n                fullWidth\r\n                className={`${classes.margin} ${classes.border} ${classes.marginLeftRight}`}>\r\n                <InputLabel>Code Postale</InputLabel>\r\n                <Input\r\n                  value={code_postale}\r\n                  name='code_postale'\r\n                  onChange={handleInputChange}\r\n                  required\r\n                />\r\n                <div className='error'>{errors.code_postale}</div>\r\n              </FormControl>\r\n            </div>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className='paiement--btn'\r\n              endIcon={<NavigateNextIcon />}>\r\n              Suivant\r\n            </Button>\r\n          </form>\r\n        ) : (\r\n          <div className='paiement__details'>\r\n            <div className='paiement__details__recapitualitfs'>\r\n              <h2>Récapitualatif de commande</h2>\r\n              {baskets.map((product) => (\r\n                <div\r\n                  className='paiement__details__product__details'\r\n                  key={product.id}>\r\n                  <div className='paiement__details__product__details-info'>\r\n                    <p>{product.title}</p>\r\n                    <p className='paiement__details__product__details-info-quantite'>\r\n                      Quantité: <span> {product.quantite} </span>{\" \"}\r\n                    </p>\r\n                  </div>\r\n                  <div className='paiement__details__product__details-prix'>\r\n                    <p>{calculPrixProduitAvecQuantite(product)}€</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              <div className='paiement__details__recapitualitfs-total'>\r\n                <p>TOTAL</p>\r\n                <p className='paiement__details__recapitualitfs-total-prix'>\r\n                  {prixTotal}€\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className='paiement__details__modePaiement'>\r\n              <h2>Mode de paiement</h2>\r\n              <form className='paiement__form'>\r\n                <CardElement\r\n                  id='card-element'\r\n                  onChange={handleChange}\r\n                  options={cardStyle}\r\n                />\r\n                {error && (\r\n                  <div className='paiement__details__error'>* {error}</div>\r\n                )}\r\n                <Button\r\n                  onClick={Payer}\r\n                  disabled={\r\n                    prixTotal <= 1 || processing || disabled || succeeded\r\n                  }\r\n                  type='submit'\r\n                  variant='contained'\r\n                  color='primary'\r\n                  className='paiement--btn-payer'>\r\n                  <span className='paiement--btn-payer-text'>\r\n                    {processing ? (\r\n                      <img src={spinner} alt='spinner' />\r\n                    ) : (\r\n                      <>Payer {prixTotal}€</>\r\n                    )}\r\n                  </span>\r\n                </Button>\r\n              </form>\r\n              <p className='paiement__details__securise'>\r\n                <i className='fas fa-lock'></i> Paiement 100% sécurisé\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className='paiement__close'>\r\n          <IconButton onClick={handleOpen}>\r\n            <i className='fas fa-times'></i>\r\n          </IconButton>\r\n        </div>\r\n        <div\r\n          className={\r\n            \"paiement__back \" + (paiment_process === \"paiement\" ? \"active\" : \"\")\r\n          }>\r\n          <IconButton onClick={() => setPaiement_process(\"livraison\")}>\r\n            <i className='fas fa-arrow-left'></i>\r\n          </IconButton>\r\n        </div>\r\n\r\n        <Modal\r\n          closeButton={false}\r\n          showModal={showModal}\r\n          setShowModal={setShowModal}\r\n          handleClose={handleClose}>\r\n          <Modal.Header>\r\n            <h2>\r\n              Etes vous sûr de vouloir quitter cette page et retourner à l'écran\r\n              de commande ?\r\n            </h2>\r\n          </Modal.Header>\r\n          <Modal.Footer>\r\n            <Button variant='contained' color='secondary' onClick={handleClose}>\r\n              Annuler\r\n            </Button>\r\n            <Button\r\n              variant='contained'\r\n              style={{ marginLeft: \"20px\" }}\r\n              onClick={(e) => {\r\n                handleClose(e);\r\n                history.replace(\"/commander\");\r\n              }}>\r\n              Oui\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst cardStyle = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: \"Roboto, Open Sans, Segoe UI, sans-serif\",\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aaa\",\r\n        backgroundColor: \"#fff\",\r\n      },\r\n      \":-webkit-autofill\": {\r\n        color: \"#fff\",\r\n      },\r\n      \":focus\": {\r\n        color: \"#aaa\",\r\n      },\r\n    },\r\n\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n  hidePostalCode: true,\r\n};\r\n\r\nexport default Paiement;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\components\\MyModal\\Modal.js",["167"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\n\r\nimport \"./modal.css\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nconst backdropVaraiants = {\r\n  from: {\r\n    opacity: 0,\r\n  },\r\n  to: {\r\n    opacity: 1,\r\n    transition: { duration: 0.3, type: \"ease\" },\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    transition: {\r\n      type: \"ease\",\r\n      duration: 0.3,\r\n      delay: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\nconst modalVariant = {\r\n  from: {\r\n    y: -50,\r\n    opacity: 0,\r\n  },\r\n  to: {\r\n    // se deplacer 200px de son emplacement origine\r\n    // y :0 place d'origine\r\n    y: 0, //'200px'\r\n    opacity: 1,\r\n    transition: {\r\n      // type: \"spring\",\r\n      // stiffness: \"100\",\r\n      type: \"ease\",\r\n      delay: 0.1,\r\n      duration: 0.3,\r\n    },\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    y: -50, //'200px'\r\n    transition: {\r\n      type: \"ease\",\r\n      duration: 0.3,\r\n    },\r\n  },\r\n};\r\n\r\nconst Modal = ({ showModal, handleClose, closeButton = true, children }) => {\r\n  return (\r\n    <AnimatePresence exitBeforeEnter>\r\n      {showModal && (\r\n        <motion.div\r\n          className='myModal__backdrop'\r\n          varaints={backdropVaraiants}\r\n          exit='exit'\r\n          initial='from'\r\n          animate='to'\r\n          onClick={handleClose}>\r\n          <motion.div className='myModal__modal' variants={modalVariant}>\r\n            {children}\r\n\r\n            {closeButton && (\r\n              <div className='myModal__modal__close'>\r\n                <IconButton onClick={handleClose}>\r\n                  <i className='fas fa-times'></i>\r\n                </IconButton>\r\n              </div>\r\n            )}\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nModal.Header = ({ children, ...rest }) => {\r\n  return (\r\n    <div {...rest} className='myModal__header'>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nModal.Body = ({ children, ...rest }) => {\r\n  return (\r\n    <div {...rest} className='myModal__body'>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.Body.Heading = ({ children, ...rest }) => {\r\n  return (\r\n    <h2 {...rest} className='myModal__body__heading'>\r\n      {children}\r\n    </h2>\r\n  );\r\n};\r\n\r\nModal.Body.Content = ({ children, ...rest }) => {\r\n  return (\r\n    <div {...rest} className='myModal__body__content'>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.Footer = ({ children, ...rest }) => {\r\n  return (\r\n    <div {...rest} className='myModal__footer'>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","C:\\Users\\alexo\\Desktop\\texan\\src\\pages\\Felicitation.js",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":1,"column":25,"nodeType":"174","messageId":"175","endLine":1,"endColumn":34},{"ruleId":"172","severity":1,"message":"176","line":9,"column":3,"nodeType":"174","messageId":"175","endLine":9,"endColumn":11},{"ruleId":"172","severity":1,"message":"177","line":11,"column":3,"nodeType":"174","messageId":"175","endLine":11,"endColumn":17},{"ruleId":"172","severity":1,"message":"178","line":6,"column":18,"nodeType":"174","messageId":"175","endLine":6,"endColumn":26},{"ruleId":"172","severity":1,"message":"179","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":14},{"ruleId":"172","severity":1,"message":"180","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":23},{"ruleId":"172","severity":1,"message":"181","line":2,"column":16,"nodeType":"174","messageId":"175","endLine":2,"endColumn":22},{"ruleId":"172","severity":1,"message":"182","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":21},{"ruleId":"172","severity":1,"message":"183","line":7,"column":17,"nodeType":"174","messageId":"175","endLine":7,"endColumn":25},{"ruleId":"172","severity":1,"message":"173","line":1,"column":10,"nodeType":"174","messageId":"175","endLine":1,"endColumn":19},{"ruleId":"172","severity":1,"message":"179","line":2,"column":10,"nodeType":"174","messageId":"175","endLine":2,"endColumn":14},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'debounce' is defined but never used.","'isIntersecting' is defined but never used.","'useCycle' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'uuidv4' is defined but never used.","'ModalBootsrap' is defined but never used.","'setMenus' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]